{"ast":null,"code":"import _defineProperty from \"/Users/imuhire/Desktop/udemy/cryptodash/cryptodash/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/imuhire/Desktop/udemy/cryptodash/cryptodash/src/App/AppProvider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nconst cc = require('cryptocompare');\n\nexport const AppContext = React.createContext();\nexport class AppProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.fetchCoins();\n    };\n\n    this.fetchCoins = async () => {\n      let coinList = (await cc.coinList()).Data;\n      console.log(coinList);\n    };\n\n    this.confirmFavorites = () => {\n      this.setState({\n        firstVisit: false,\n        page: 'dashboard'\n      });\n      localStorage.setItem('cryptoDash', JSON.stringify({\n        test: 'Hello'\n      }));\n    };\n\n    this.setPage = page => this.setState({\n      page\n    });\n\n    this.state = _objectSpread({\n      page: 'dashboard'\n    }, this.savedSettings(), {\n      setPage: this.setPage,\n      confirmFavorites: this.confirmFavorites\n    });\n  }\n\n  savedSettings() {\n    let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n\n    if (!cryptoDashData) {\n      return {\n        page: 'settings',\n        firstVisit: true\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/Users/imuhire/Desktop/udemy/cryptodash/cryptodash/src/App/AppProvider.js"],"names":["React","cc","require","AppContext","createContext","AppProvider","Component","constructor","props","componentDidMount","fetchCoins","coinList","Data","console","log","confirmFavorites","setState","firstVisit","page","localStorage","setItem","JSON","stringify","test","setPage","state","savedSettings","cryptoDashData","parse","getItem","render","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AAEA,OAAO,MAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,EAAnB;AAEP,OAAO,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,MAAM;AACtB,WAAKC,UAAL;AACH,KAXkB;;AAAA,SAYnBA,UAZmB,GAYN,YAAY;AACrB,UAAIC,QAAQ,GAAG,CAAC,MAAMV,EAAE,CAACU,QAAH,EAAP,EAAsBC,IAArC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAfkB;;AAAA,SAgBnBI,gBAhBmB,GAgBA,MAAM;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAE,KADF;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe;AAC9CC,QAAAA,IAAI,EAAE;AADwC,OAAf,CAAnC;AAGH,KAxBkB;;AAAA,SAgCnBC,OAhCmB,GAgCTN,IAAI,IAAI,KAAKF,QAAL,CAAc;AAACE,MAAAA;AAAD,KAAd,CAhCC;;AAEf,SAAKO,KAAL;AACIP,MAAAA,IAAI,EAAE;AADV,OAEO,KAAKQ,aAAL,EAFP;AAGIF,MAAAA,OAAO,EAAE,KAAKA,OAHlB;AAIIT,MAAAA,gBAAgB,EAAE,KAAKA;AAJ3B;AAMH;;AAiBDW,EAAAA,aAAa,GAAE;AACX,QAAIC,cAAc,GAAGN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,YAArB,CAAX,CAArB;;AACA,QAAG,CAACF,cAAJ,EAAmB;AACf,aAAO;AAACT,QAAAA,IAAI,EAAE,UAAP;AAAmBD,QAAAA,UAAU,EAAE;AAA/B,OAAP;AACF;;AACF,WAAO,EAAP;AACH;;AAGDa,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE,KAAKL,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWuB,QADhB,CADJ;AAKH;;AAzC4C","sourcesContent":["import React from 'react';\n\nconst cc = require('cryptocompare');\n\nexport const AppContext = React.createContext();\n\nexport class AppProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 'dashboard',\n            ...this.savedSettings (),\n            setPage: this.setPage,\n            confirmFavorites: this.confirmFavorites\n        }\n    }\n    componentDidMount = () => {\n        this.fetchCoins();\n    }\n    fetchCoins = async () => {\n        let coinList = (await cc.coinList()).Data;\n        console.log(coinList);\n    }\n    confirmFavorites = () => {\n        this.setState({\n            firstVisit: false,\n            page: 'dashboard'\n        });\n        localStorage.setItem('cryptoDash', JSON.stringify({\n            test: 'Hello'\n        }))\n    }\n    savedSettings(){\n        let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n        if(!cryptoDashData){\n            return {page: 'settings', firstVisit: true}\n         }\n        return {};\n    }\n    setPage = page => this.setState({page})\n\n    render() {\n        return (\n            <AppContext.Provider value={this.state}>\n                {this.props.children}\n            </AppContext.Provider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}